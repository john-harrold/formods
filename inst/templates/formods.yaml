# https://www.glyphicons.com/sets/basic/
#General formods (FM) configuration across modules
FM: 
  # Some features (e.g. copy to clipboard) don't work when deployed
  deployed: FALSE
  #General code options for the modules
  code: 
    theme:           "vibrant_ink"    
    showLineNumbers: TRUE
    # File name of the R script to contain generation code
    gen_file: formods_export.R
    # This is the preamble used in script generation. It goes on the
    # top. Feel free to add to it if you need to. Note that packages should be
    # listed in the packages section at the same level. 
    gen_preamble: |-
      # formods automated output
      # https://formods.ubiquity.tools/
      rm(list=ls())
    # Each module should have a packages section that lists the packages
    # needed for code genereated for that module. 
    packages: ["onbrand", "writexl"]
  notifications:
    config:
      # You can put any arguments here that would be arguments for
      # config_notify(). See ?shinybusy::config_notify() for more information
      success:
        useFontAwesome: FALSE
        useIcon:        FALSE
        background:     "#5bb85b"
      failure:
        useFontAwesome: FALSE
        useIcon:        FALSE
        background:     "#d9534f"
      info:
        useFontAwesome: FALSE
        useIcon:        FALSE
        background:     "#5bc0de"
      warning:
        useFontAwesome: FALSE
        useIcon:        FALSE
        background:     "#f0ac4d"
  reporting: 
    # enabled here controls reporting for the app. Individual modules can be
    # controlled in their respective configuration files
    enabled: TRUE
    # The content_init section is used to initialize reports. You shouldn't
    # change the xlsx rpt but the docx and pptx rpt can be altered to
    # use custom onbrand templates. The main thing is that you create an
    # object called rpt with the appropriate template type in it. You can
    # also do any preprocessing here as well such as adding default content or
    # doing any placeholder assignments you might want to use.
    content_init:
      xlsx: |-
           rpt = list(summary = NULL,
                      sheets  = list())
      docx: |-
           rpt  = onbrand::read_template(
             template = file.path(system.file(package="onbrand"), "templates", "report.docx"),
             mapping  = file.path(system.file(package="onbrand"), "templates", "report.yaml"))
      pptx: |-
           rpt  = onbrand::read_template(
             template = file.path(system.file(package="onbrand"), "templates", "report.pptx"),
             mapping  = file.path(system.file(package="onbrand"), "templates", "report.yaml"))
  ui:
    # See ?actionBttn for styles
    button_style: "fill"
    # Max size for picker inputs
    select_size:  10
    color_green:  "#00BB8A"
    color_red:    "#FF475E"
    color_blue:   "#0088FF"
    color_purple: "#bd2cf4"
  labels:
    # JMH remove this once the datset stuff has been moved over
    default_ds:         "Original data set"
  user_files:
    use_tmpdir:     TRUE
  logging:
    enabled:        TRUE
    timestamp:      TRUE
    timestamp_fmt: "%Y-%m-%d %H:%M:%S"
    log_file:      "formods_log.txt"
    console:       TRUE
