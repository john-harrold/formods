% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ASM_Server.R
\name{ASM_test_preload}
\alias{ASM_test_preload}
\title{Test Specified Preload Functionality}
\usage{
ASM_test_preload(
  sources = NULL,
  preload_files = NULL,
  preload_dir = tempfile(pattern = "preload_"),
  save_state_file = tempfile(fileext = ".zip"),
  test_save_state = TRUE,
  workflow = NULL
)
}
\arguments{
\item{sources}{Vector of at corresponds with the ID used to call the modules UI elements}

\item{preload_files}{Dataframe of files needed to run the workflow with a
column called \code{src} for the local source of the file and \code{dest} for the
destination. Not strictly required but almost always needed.}

\item{preload_dir}{Directory to run out of (\code{tempdir()})}

\item{save_state_file}{When testing `ASM_save_state()` this is the file name where the stat will be written (\code{tempfile(fileext=".zip")})}

\item{test_save_state}{Logical when set to \code{TRUE} (default) it will test the zip file (\code{save_state_file}) to make sure it can be loaded.}

\item{workflow}{Yaml preload file to run a workflow (optional, \code{NULL} default).}
}
\value{
list with the following elements
\itemize{
  \item{isgood:}          Boolean indicating the exit status of the function.
  \item{msgs:}            Messages to be passed back to the user.
  \item{apl_res:}         Results from FM_app_preload() if run,   \code{list(isgood=FALSE, msgs="not run")} otherwise. 
  \item{ss_res:}          Results from ASM_save_state() if run,   \code{list(isgood=FALSE, msgs="not run")} otherwise. 
  \item{ls_res:}          Results from ASM_load_state() if run,   \code{list(isgood=FALSE, msgs="not run")} otherwise. 
  \item{rwf_res:}         Results from ASM_run_workflow() if run, \code{list(isgood=FALSE, msgs="not run")} otherwise. 
  \item{save_state_file:} If ss_res$isgood is TRUE this is the path to the zip file generated when saving the app state after loading. 
}
}
\description{
Loads specified preload lists to verify execution, saves the state to the
specified zip file and attempts to load the saved state if
\code{test_save_state} is \code{TRUE}. To test a workflow you can use
\code{sources} to specify the loading of data and then \code{workflow} to
specify the yaml workflow.
}
\examples{

sources = c(
 system.file(package="formods", "preload", "UD_preload.yaml"),
 system.file(package="formods", "preload", "ASM_preload.yaml"))

res = ASM_test_preload(sources=sources, test_save_state = FALSE)

res$isgood
}
