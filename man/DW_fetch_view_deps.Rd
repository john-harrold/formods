% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DW_Server.R
\name{DW_fetch_view_deps}
\alias{DW_fetch_view_deps}
\title{Recursively Finds View Dependencies}
\usage{
DW_fetch_view_deps(state, session, view_ids = NULL)
}
\arguments{
\item{state}{DW state object}

\item{session}{Shiny session variable}

\item{view_ids}{List of view ids to mend or NULL to attempt to mend all}
}
\value{
list with the following elements
\itemize{
 \item{isgood:}       Return status of the function.
 \item{msgs:}         Messages to be passed back to the user.
 \item{dep_catalog:}  Dataframe of dependencies (including specified
 \itemize{
   \item{view_id:}      Data view ID (e.g., view_3)
   \item{idx:}          Numeric data view id (e.g. 3) 
   \item{checksum:}     Checksum of the data view 
   \item{object_name:}  R object name used (e.g., DW_myDS_2)
  }
 \item{dep_catalog_ex:} Same as deps_catalog but exculding  view_ids
}
}
\description{
For the view ids specified in view_ids this will walk through and find any data views that
depend on those view IDS and rebuild them if necessary.
}
\examples{
# JMH add examples
}
